{"version":3,"sources":["component/banner/banner.js","component/textview/textview.js","component/location/location.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","useStylesForBtn","Banner","prop","classes","btn","className","AppBar","position","Toolbar","IconButton","edge","color","aria-label","style","width","src","alt","Grid","container","direction","justify","alignItems","item","textAlign","Button","marginTop","size","variant","TextView","props","marginBottom","data","sectionName","float","content","Location","Typography","height","frameborder","border","allowfullscreen","aria-hidden","tabindex","App","xs","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.ef977f49.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nimport Grid from '@material-ui/core/Grid';\nimport './banner.css';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        flexGrow: 1,\n    },\n}));\n\nconst useStylesForBtn = makeStyles((theme) => ({\n    root: {\n        '& > *': {\n            marginRight: theme.spacing(1),\n        },\n    },\n}));\n\nexport const Banner = (prop) => {\n    const classes = useStyles();\n    const btn = useStylesForBtn();\n    return <div className='bannerHolder'>\n        <AppBar position=\"static\">\n            <Toolbar>\n                <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n                    <MenuIcon />\n                </IconButton>\n                <div className=\"panelname\">Carnegie Vanguard High School</div>\n            </Toolbar>\n        </AppBar>\n        <div>\n            <img style={{ width: '100%' }} src=\"https://www.houstonisd.org/cms/lib2/TX01001591/Centricity/ModuleInstance/233349/large/CVHS-1.png\" alt='carnegie' />\n        </div>\n        <Grid container spacing={3} direction=\"coloum\" justify=\"space-between\" alignItems=\"flex-start\">\n            <Grid item>\n                <div className=\"panelname\">Carnegie Vanguard High School</div>\n                <div className=\"collageaddr\">Houston, Texas, USA</div>\n            </Grid>\n            <Grid item>\n                <Grid container direction=\"row\" justify=\"space-between\" alignItems=\"flex-start\">\n                    <Grid item>\n                        <div className=\"stats\" style={{textAlign:\"right\"}}>Established :</div>\n                        <div className=\"stats\" style={{textAlign:\"right\"}}>Active Student :</div>\n                        <div className=\"stats\" style={{textAlign:\"right\"}}>Academic Staff :</div>\n                    </Grid>\n                    <Grid item>\n                        <div className=\"stats\">2002</div>\n                        <div className=\"stats\">615</div>\n                        <div className=\"stats\">55</div>\n                    </Grid>\n                </Grid>\n                {/* <div>Established : 2002</div>\n                <div>Active Student : 615</div>\n                <div>Academic Staff : 55</div> */}\n            </Grid>\n        </Grid>\n        <div className={btn.root}>\n            <Button style={{ marginTop: \"10px\" }} size=\"small\" variant=\"outlined\" color=\"primary\">Our Advisor</Button>\n            <Button style={{ marginTop: \"10px\" }} className=\"btnmargin\" size=\"small\" variant=\"outlined\" color=\"primary\">Apply</Button>\n            <Button style={{ marginTop: \"10px\" }} className=\"btnmargin\" size=\"small\" variant=\"outlined\" color=\"primary\">Inquire</Button>\n            <Button style={{ marginTop: \"10px\" }} className=\"btnmargin\" size=\"small\" variant=\"outlined\" color=\"primary\">Chat</Button>\n        </div>\n    </div>\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport './textview.css';\nimport AspectRatioSharpIcon from '@material-ui/icons/AspectRatioSharp';\n\nexport const TextView = (props) => {\n    return <Grid className=\"textviewholder\" container direction=\"column\"  justify=\"flex-start\" alignItems=\"stretch\">\n        <Grid item>\n            <div className=\"panelname\" style={{marginBottom: \"15px\"}}>\n                {props.data.sectionName}\n                <AspectRatioSharpIcon style={{float: \"right\"}} />\n            </div>\n        </Grid>\n        <Grid item>\n            {props.data.content}\n        </Grid>\n    </Grid>\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\nexport const Location = (props) => {\n    return <Grid className=\"textviewholder\" container direction=\"column\" justify=\"flex-start\" alignItems=\"flex-start\">\n        <Grid item>\n            <Typography variant=\"h6\">\n                Location\n            </Typography>\n        </Grid>\n        <Grid item style={{width: \"100%\"}}>\n            <iframe src=\"https://www.google.com/maps/embed?pb=!1m14!1m8!1m3!1d13855.266766560668!2d-95.3851833!3d29.7540179!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x0%3A0x480feeca1ceab1bd!2sCarnegie%20Vanguard%20High%20School!5e0!3m2!1sen!2sin!4v1590860730779!5m2!1sen!2sin\"\n                width=\"100%\" height=\"450\" frameborder=\"0\" style={{ border: 0 }} allowfullscreen=\"\" aria-hidden=\"false\" tabindex=\"0\"></iframe>\n        </Grid>\n    </Grid>\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport './App.css';\nimport { Banner } from './component/banner/banner';\nimport { TextView } from './component/textview/textview'\nimport { Location } from \"./component/location/location\";\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1\n  }\n}));\n\nfunction App() {\n  const classes = useStyles();\n  const aboutUs = { sectionName: \"About\", content: \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\" };\n  const courses = { sectionName: \"Courses & Programs\", content: \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\" };\n  const campus = { sectionName: \"Campus\", content: \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\" };\n  const clubs = { sectionName: \"Clubs & Societies\", content: \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\" };\n  const studenLif = { sectionName: \"Student Life\", content: \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\" };\n  const admissions = { sectionName: \"Admissions\", content: \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\" };\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={3} direction=\"row\" justify=\"center\" alignItems=\"flex-start\">\n        <Grid item xs={11}>\n          <Banner />\n          <TextView data={aboutUs} />\n          <TextView data={courses} />\n          <Location />\n          <TextView data={campus} />\n          <TextView data={clubs} />\n          <TextView data={studenLif} />\n          <TextView data={admissions} />\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/carnegie-app/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}